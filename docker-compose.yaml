services:
  auth-service:
    build: ./service-auth  # Path to auth service Dockerfile
    env_file:
      - .env 
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    depends_on:
      - mysqldb 
  
  data-service:
    build: ./web-app-data  # Path to data service Dockerfile
    env_file:
      - .env 
    ports:
      - "${DATA_PORT}:${DATA_PORT}"
    depends_on:
      - mysqldb
      - auth-service

  analytics-service:
    build: ./service-ana  # Path to analytics service Dockerfile
    env_file:
      - .env 
    ports:
      - "${ANA_PORT}:${ANA_PORT}"
    depends_on:
      - mysqldb
      - mongodb
    restart: unless-stopped  # Restart the service unless explicitly stopped

  result-service:
    build: ./web-app-result  # Path to analytics service Dockerfile
    env_file:
      - .env 
    ports:
      - "${RESULT_PORT}:${RESULT_PORT}"
    depends_on:
      - mongodb 
      - analytics-service 

  mysqldb:
    image: mysql:5.7 
    env_file:
      - .env 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE} 
    volumes:
      - ./mysql-db/init.sql:/docker-entrypoint-initdb.d/init.sql  # Initialize the DB with an SQL script
      - ./data/mysql:/var/lib/mysql  # Persists MySQL data
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"

  mongodb:
    image: mongo:latest
    env_file:
      - .env 
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - ./data/mongodb:/data/db  # Persists MongoDB data
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"